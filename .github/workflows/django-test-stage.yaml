name: Django CI/CD

on:
  push:

jobs:
  SAST:
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: SAST
        uses: AppThreat/sast-scan-action@master
        with:
          type: "python"

  Test:
    runs-on: ubuntu-latest
    needs: "SAST" 
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: ${{ vars.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ vars.POSTGRES_DB }}
          SMTP_MAIL_USER: ${{ vars.SMTP_MAIL_USER }}
          SMTP_MAIL_PASSWORD: ${{ vars.SMTP_MAIL_PASSWORD}}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    steps: 
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Python [Version 3.10]
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install Dependencies
        run: |

          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
      - name: Run Tests
        env:
          DEBUG: "0"
          # Note: Anything with vars.* is pulled from the pipeline variables.
          CURRENT_DOMAIN: ${{ vars.CURRENT_ACTIVE_DOMAIN }}
          SECRET_KEY: ${{ vars.DJANGO_SECRET_KEY }}
          DB_USER: ${{ vars.POSTGRES_USER }}
          DB_PASSWORD: ${{ vars.POSTGRES_PASSWORD }}
          DB_HOST: ${{ vars.POSTGRES_HOST }}
          DB_NAME: ${{ vars.POSTGRES_DB }}
          DB_PORT: ${{ vars.POSTGRES_PORT }}
          SMTP_USER: ${{ vars.SMTP_MAIL_USER}}
          SMTP_PASSWORD: ${{ vars.SMTP_MAIL_PASSWORD }}
        run: |
          echo ***Executing Django Tests***
          cd src/Clean-Energy-PA-Site/
          python manage.py test
          coverage run manage.py test -v 2
          coverage report --fail-under=90

          echo ***Executing WebParser Tests***
          cd ../web_parser
          pytest .
          coverage run -m pytest .
          coverage report --fail-under=90

  Deploy:
    runs-on: ubuntu-latest
    needs: ["Test", "SAST"]
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2  
    - name: Deploy to EB
      uses: einaregilsson/beanstalk-deploy@v21
      with:
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        application_name: Website
        environment_name: Clean-Energy-PA
        version_label: ${{ vars.VERSION_LABEL }}
        region: us-east-2